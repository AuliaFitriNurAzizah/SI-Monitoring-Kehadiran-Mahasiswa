version: '3.8'

services:
  # Backend PHP
  app:
    build:
      context: ./backend #Build dockerfile dari folder backend
      dockerfile: ../Dockerfile
    image: kehadiran_mahasiswa-backend # Nama image yang dibuat
    container_name: kehadiran_mahasiswa-app # Nama container yang dijalankan
    restart: unless-stopped  # Restart otomatis kecuali dihentikan manual
    working_dir: /var/www # Direktori kerja di dalam container
    volumes:
      - ./backend:/var/www  # Sinkronkan folder backend lokal ke container
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini # Konfigurasi tambahan PHP
    networks:
      - kehadiran_mahasiswa-network # Masukkan ke jaringan yang sama

  # Backend Nginx
  webserver:
    image: nginx:alpine # Gunakan image Nginx
    container_name: kehadiran_mahasiswa-nginx # Nama container
    restart: unless-stopped
    ports:
      - "8080:80" # Akses Nginx di browser lewat http://localhost:8080
    volumes:
      - ./backend:/var/www  # Kode backend dibaca dari folder ini
      - ./docker/nginx/conf.d/backend.conf:/etc/nginx/conf.d/default.conf # Konfigurasi Nginx
    networks:
      - kehadiran_mahasiswa-network

  # Frontend PHP (pakai container PHP yang sama)
  frontend-app:
    build:
      context: ./frontend  # Build dari folder frontend
      dockerfile: ../Dockerfile  # Dockerfile tetap di luar folder
    image: kehadiran_mahasiswa-frontend # Nama image frontend
    container_name: kehadiran_mahasiswa-fe-app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./frontend:/var/www  # Folder frontend lokal disinkronkan ke container
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini  # Setting PHP
      - ./docker/php/www.conf:/usr/local/etc/php-fpm.d/www.conf # Konfigurasi PHP-FPM khusus frontend
    networks:
      - kehadiran_mahasiswa-network

  # Frontend Nginx
  frontend-web:
    image: nginx:alpine
    container_name: kehadiran_mahasiswa-fe-nginx
    restart: unless-stopped
    ports:
      - "8082:80" # Akses frontend via http://localhost:8082
    volumes:
      - ./frontend:/var/www  # Kode frontend diambil dari sini
      - ./docker/nginx/conf.d/frontend.conf:/etc/nginx/conf.d/default.conf # Konfigurasi Nginx frontend
    networks:
      - kehadiran_mahasiswa-network

  # MySQL
  db:
    image: mysql:8.0
    container_name: kehadiran_mahasiswa-db
    restart: unless-stopped
    environment:
        MYSQL_ROOT_PASSWORD: rootpassword  # Password root database
        MYSQL_DATABASE: simon_kehadiran  # Nama database yang langsung dibuat
        MYSQL_USER: app_user  # Username custom
        MYSQL_PASSWORD: password # Password untuk app_user
    ports:
      - "3307:3306" # Akses database dari host lewat port 3307
    volumes:
      - dbdata:/var/lib/mysql # Data database disimpan di volume agar tidak hilang
      - ./docker/mysql/my.cnf:/etc/mysql/my.cnf  # Setting tambahan MySQL
    networks:
      - kehadiran_mahasiswa-network

  # phpMyAdmin
  phpmyadmin:
    image: phpmyadmin/phpmyadmin # Gunakan image resmi phpMyAdmin
    container_name: kehadiran_mahasiswa-phpmyadmin
    restart: unless-stopped
    environment:
      PMA_HOST: db # phpMyAdmin akan terhubung ke container "db"
      PMA_PORT: 3306 # Port default MySQL di dalam container
    ports:
      - "8081:80" # Akses phpMyAdmin lewat http://localhost:8081
    networks:
      - kehadiran_mahasiswa-network

networks:
  kehadiran_mahasiswa-network:
    driver: bridge  # Tipe jaringan Docker (jembatan antar container)

volumes:
  dbdata:
    driver: local # Simpan data database secara lokal agar tidak hilang